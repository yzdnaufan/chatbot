from modules.balance_checker_flow import BalanceCheckFlow
from modules.fund_transfer_flow import FundTransferFlow
from utils.state import ConversationStateManager

# Simulated NLP model for intent recognition
# This could be changed to a real NLP model
def identify_intent(query):
    if "balance" in query.lower():
        return "balance_inquiry"
    elif "transfer" in query.lower():
        return "fund_transfer"
    return "unknown"

class FlowManager:
    """
    The FlowManager class manages the flow of conversations in the chatbot.

    Attributes:
        state_manager (ConversationStateManager): An instance of the ConversationStateManager class.
        flow (dict): A dictionary mapping intents to specific flow handlers.

    Methods:
        reset_state(user_id): Resets the state for a specific user.
        process_query(query, session_id): Processes a user query and returns a response based on the current state and intent.
    """

    def __init__(self):
        self.state_manager = ConversationStateManager()
        self.flow = {
            "fund_transfer": BalanceCheckFlow(),
            "balance_inquiry": FundTransferFlow() 
        }

    def reset_state(self, user_id):
        """
        Resets the state for a specific user.

        Args:
            user_id (str): The ID of the user.

        Returns:
            None
        """
        self.state_manager.reset_state(user_id)

    def process_query(self, query, session_id):
        """
        Processes a user query and returns a response based on the current state and intent.

        Args:
            query (str): The user query.
            session_id (str): The ID of the session.

        Returns:
            str: The response generated by the chatbot.
        """
        intent = identify_intent(query)
        current_state = self.state_manager.get_state(session_id)

        # Determine the flow based on intent and delegate to the specific flow handler
        if intent in self.flows:
            response = self.flows[intent].handle_step(query, session_id)
        else:
            response = "I'm sorry, I didn't understand that."

        return response



